---
title: "Open Budget: Ukraine municipality financials"
format: 
  dashboard:
    orientation: columns
---

```{ojs}
//| output: false

import { aq, op } from '@uwdata/arquero';

data = FileAttachment("data/data_analysis.csv")
  .csv({ typed: true })
  
data_transform = data
  .map(d => ({...d, 
      YEAR: d.REP_PERIOD.getUTCFullYear(), 
      MONTH: d.REP_PERIOD.getMonth() 
      })
    )
    
data_pivot = aq.from(data_transform.filter(d => d.YEAR == 2021 | d.YEAR == selectYear))
  .groupby(["CITY", "MONTH"])
  .pivot(['YEAR'], [selectIndicator.indicator])
  .rename(aq.names(["city", "month", 'base', 'current']))
  .objects()
  
  
data_change = aq.from(data_pivot)
  .groupby("city")
  .filter(d => d.current != undefined)
  .filter(d => d.month == op.max(d.month))
  .derive({pct_change: d => (d.current - d.base) / d.base})
  .objects()
  
indicators = [
  {name: "Revenues", indicator: "income"},
  {name: "Core revenues (without transfers)", indicator: "core_income"},
  {name: "Operating surplus", indicator: "op_surplus"}
]
  

```

#  {.sidebar}

```{ojs}

viewof selectIndicator = Inputs.select(
  indicators, 
  {label: "Select indicator", format: d => d.name}
)

viewof selectYear = Inputs.select(
  [2022,2023,2024], 
  {label: "Select year", value: 2024, format: d => d.toString()}
)
```

# Plot

```{ojs}
Plot.plot({
  title: `Change in ${selectIndicator.name}, ${data_change[0].month + 1}m ${selectYear} vs 2021 YoY`,
  marginLeft: 100,
  marginRight: 50,
  height:600,
  label: null,
  x: {
    axis: null,
    percent: true
  },
  color: {
    scheme: "PiYG",
    type: "ordinal"
  },
  marks: [
    Plot.barX(data_change, {
      x: "pct_change",
      y: "city",
      fill: (d) => d.pct_change > 0,
      sort: { y: "x" }
    }),
    Plot.gridX({ stroke: "white", strokeOpacity: 0.5 }),
    d3
      .groups(data_change, (d) => d.pct_change > 0)
      .map(([growth, cities]) => [
        Plot.axisY({
          x: 0,
          ticks: cities.map((d) => d.city),
          tickSize: 0,
          anchor: growth ? "left" : "right"
        }),
        Plot.textX(cities, {
          x: "pct_change",
          y: "city",
          text: ((f) => (d) => f(d.pct_change))(d3.format("+.1%")),
          textAnchor: growth ? "start" : "end",
          dx: growth ? 4 : -4,
        })
      ]),
    Plot.ruleX([0])
  ]
})
```

```{ojs}
Plot.plot({
  title: `Change in ${selectIndicator.name}, ${data_change[0].month + 1}m ${selectYear} vs 2021 YoY`,
  marginLeft: 100,
  marginRight: 50,
  height:600,
  label: null,
  x: {
    axis: null,
    percent: true
  },
  color: {
    scheme: "PiYG",
    type: "ordinal"
  },
  marks: [
    Plot.barX(data_change, {
      x: "pct_change",
      y: "city",
      fill: (d) => d.pct_change > 0,
      sort: { y: "x" }
    }),
    Plot.gridX({ stroke: "white", strokeOpacity: 0.5 }),
    d3
      .groups(data_change, (d) => d.pct_change > 0)
      .map(([growth, cities]) => [
        Plot.axisY({
          x: 0,
          ticks: cities.map((d) => d.city),
          tickSize: 0,
          anchor: growth ? "left" : "right"
        }),
        Plot.textX(cities, {
          x: "pct_change",
          y: "city",
          text: ((f) => (d) => f(d.pct_change))(d3.format("+.1%")),
          textAnchor: growth ? "start" : "end",
          dx: growth ? 4 : -4,
        })
      ]),
    Plot.ruleX([0])
  ]
})
```

# Data {scrolling="true"}

```{ojs}
Inputs.table(data, {rows: 25})
```
